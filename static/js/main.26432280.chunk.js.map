{"version":3,"sources":["logo.svg","components/Header.js","components/DisplayQuestions.js","questions.js","components/Quiz.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","DisplayQuestions","index","problem","active","setUsersChoice","userChoice","Spinner","question","correct","choices","image","desc","Fragment","src","alt","map","option","i","Form","key","toString","FormGroup","check","Label","Input","type","name","checked","onChange","Alert","questions","Timer","time","Progress","value","Quiz","setTime","_useState3","_useState4","setActive","_useState5","_useState6","problems","setProblems","_useState7","_useState8","current","setCurrent","_useState9","_useState10","selected","setSelected","finishQuiz","score","length","alert","useEffect","setTimeout","q","ind","Math","floor","random","temp","randomShuffle","splice","components_DisplayQuestions","choice","t","Button","Home","react_router_dom","to","App","components_Header","react_router","path","components_Quiz","components_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.26432280.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from 'reactstrap';\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color='black' dark expand='md'>\n        <NavbarBrand href='/'>Quizzer</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='mr-auto' navbar>\n            <NavItem>\n              <NavLink href='/quiz/'>Play quiz</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport {Form, Spinner, FormGroup, Label, Input, Alert} from 'reactstrap';\n\nfunction DisplayQuestions(props)\n{\n  const {index, problem, active , setUsersChoice, userChoice} = props;\n    if(!problem)\n  {\n    return <Spinner color='primary' />;\n  }\n\n  const {question, correct, choices, image, desc} = problem;\n\n  return (\n    <>\n      {image === 'None' ? (\n        ''\n      ) : (\n        <div className='row'>\n          <div className='col-12 text-center'>\n            <img src={image} alt=\"loading\" />\n          </div>\n        </div>\n      )}\n      <div className='row'>\n        <div className='col-12 text-center'>\n          <h5>{index + 1 + '. ' + question}</h5>\n        </div>\n      </div>\n      {choices.map((option, i) => (\n        <Form key={i.toString()}>\n          <FormGroup check>\n            <Label check>\n              <Input\n                type='radio'\n                name={'radio' + i}\n                checked={userChoice === i + 1}\n                onChange={() => {\n                  setUsersChoice(index, i + 1);\n                }}\n              />{' '}\n              {option}\n            </Label>\n          </FormGroup>\n        </Form>\n      ))}\n      {!active ? (\n        <Alert color='info'>\n          <b> Correct answer: </b> ({correct})\n          <br />\n          <b> Description: </b> ({desc})\n        </Alert>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n\nexport default DisplayQuestions;","const questions = [\n  {\n    question: 'Where is Taj Mahal Located?',\n    choices: ['Mumbai', 'Agra', 'New Delhi', 'None of these'],\n    correct: 2,\n    desc: 'Common Fact',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/taj.jpeg',\n  },\n  {\n    question: 'Who won the IPL title 4 times?',\n    choices: [\n      'Mumbai Indians',\n      'Chennai Super Kings',\n      'Sunrisers Hyderabad',\n      'Kolkata Knight Riders',\n    ],\n    correct: 1,\n    desc: 'Mumbai Indians won IPL in 2013,2015,2017 and 2019.',\n    image: 'None',\n  },\n  {\n    question: 'Where is statue of Ahinsa located?',\n    choices: ['Mysooree', 'Patna', 'Nashik', 'Thiruvananthapuram'],\n    correct: 3,\n    desc:\n      'The Statue of Ahimsa (121 feet tall), depicts the first Jain Tirthankara, Rishabhanatha, is located at Mangi-Tungi, near Nashik in the Indian state of Maharashtra.',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/statue.jpg',\n  },\n  {\n    question: \"Which of the following is called 'City of Lakes' ?\",\n    choices: ['New Delhi', 'Mount Abu', 'Nainital', 'Udaipur'],\n    correct: 4,\n    desc:\n      'Set around a series of artificial lakes, Udaipur is also known for its lavish royal residences',\n    image: 'None',\n  },\n  {\n    question: 'Which is the first smart city in world?',\n    choices: ['New Jersey', 'Seoul', 'Vatican City', 'California'],\n    correct: 2,\n    desc:\n      \"Seoul has been immersed in smart technology for years, having been named the world's first smart city back in 2014.\",\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/seoul.jpeg',\n  },\n  {\n    question: 'Where is Gateway of India Located?',\n    choices: ['Mumbai', 'Chennai', 'New Delhi', 'Hyderabad'],\n    correct: 1,\n    desc: 'Common Fact',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/gateway.jpeg',\n  },\n  {\n    question: 'Which team won the IPL in 2019?',\n    choices: [\n      'Mumbai Indians',\n      'Chennai Super Kings',\n      'Sunrisers Hyderabad',\n      'Kolkata Knight Riders',\n    ],\n    correct: 1,\n    desc:\n      'Mumbai Indians won IPL in 2019, defeating Chennai Super Kings in the finals.',\n    image: 'None',\n  },\n  {\n    question: 'Which is the tallest waterfalls in the world ?',\n    choices: ['Jog Falls', 'Tugela Falls', 'Angel Falls', 'Victoria Falls'],\n    correct: 3,\n    desc:\n      ' Angel Falls (Salto ÄÂngel) in Venezuela is the highest waterfall in the world. The falls are 3230 feet in height.',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/fall.jpeg',\n  },\n  {\n    question: \"Which of the following is called 'the Land of Rising Sun' ?\",\n    choices: ['India', 'China', 'U.S.A', 'Japan'],\n    correct: 4,\n    desc:\n      'According to the words of the Japanese envoy himself, that name was chosen because the country was so close to where the sun rises. In any event, the name stuck, and for the last 1400 years or so, the world has referred to Japan as Nippon, the land of the rising sun.',\n    image: 'None',\n  },\n  {\n    question: 'Which is the southernmost point of India?',\n    choices: ['Siachin', 'Indira Point', 'Thiruvananthapuram', 'Kanyakumari'],\n    correct: 2,\n    desc:\n      \"The southernmost point of the Indian territory is Indira Point in the Andaman & Nicobar Islands. It's Cape Comorin or Kanyakumari that is the southernmost point in mainland India.\",\n    image: 'None',\n  },\n  {\n    question:\n      'Which of the following functions treats its arguement string as if it had actually been coded at that point in the program?',\n    choices: ['bind()', 'apply()', 'eval()', 'with()'],\n    correct: 3,\n    desc:\n      \"eval() is a function used to cheat lexical scope. For eg. eval('var a=2')\",\n    image: 'None',\n  },\n  {\n    question:\n      'What would be the output of following code? console.log(Number([]))',\n    choices: ['NaN', '0', \"'0'\", \"'NaN'\"],\n    correct: 2,\n    desc: 'Common Fact',\n    image: 'None',\n  },\n  {\n    question: 'Which of the following is not an \"ES6\" feature ?',\n    choices: [\n      'let statement',\n      'Promises',\n      'arrow functions',\n      'Strict Equality(===)',\n    ],\n    correct: 4,\n    desc:\n      'The Strict Equality feature was also in the older versions of Javascript. However, other features had been introduced in ES6 (2015) .',\n    image: 'None',\n  },\n  {\n    question:\n      \"What is the output of the code snippet? var obj={a:42,b:'hello'}; var b='a'; console.log(obj[b]+obj.b);\",\n    choices: ['42hello', 'hello42', '84', 'hellohello'],\n    correct: 1,\n    desc:\n      \"When[] is used to access property, the property name should be in double quotes or single quotes. Also, when '+' is used with a string, it is used as 'concatenation operator'\",\n    image: 'None',\n  },\n  {\n    question: \"Which of the following brands invented 'JavaScript'?\",\n    choices: ['Mozilla', 'Netscape', 'Opera', 'Google'],\n    correct: 2,\n    desc:\n      'Netscape is a brand name associated with the development of the Netscape web browser. It created the JavaScript programming language, the most widely used language for client-side scripting of web pages, to be used in its Netscape browser, at first.',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/browser.jpg',\n  },\n  {\n    question:\n      \"What is the output of below given code snippet? var a=[1,2,3]; var b=[1,2,3]; var c='1,2,3' console.log(a==c) console.log(b==c) console.log(a==b)\",\n    choices: [\n      'true, true, false',\n      'false, false, true',\n      'true, true, true',\n      'false, false, false',\n    ],\n    correct: 1,\n    desc:\n      \"On comparing objects in JS (Arrays are also built-in objects in JS), values are actually held by references. So, only references are compared, not values. Arrays are by default, coerced to all values with comma, in a string, when compared with a string. For eg. [1,2,3] becomes '1,2,3'\",\n    image: 'None',\n  },\n  {\n    question: 'If x!==x in JavaScript, find the value of x?',\n    choices: ['undefined', 'NaN', 'null', 'window object'],\n    correct: 2,\n    desc:\n      'NaN is not equal to NaN. This concept is used to polyfil the function for isNaN() for older browsers.',\n    image: 'None',\n  },\n  {\n    question: 'What would parseInt(1/0,19) return ?',\n    choices: ['Infinity', 'NaN', '19', '18'],\n    correct: 4,\n    desc:\n      \"The second arguement of parseInt() is the radix value. When 1/0 is performed, it returns 'Infinity', the radix value being 19 (means symbols from 0-9 and a-i used), it returns 'i', so output is equivalent to decimal value of '18' \",\n    image: 'None',\n  },\n  {\n    question: 'Who developed JavaScript?',\n    choices: [\n      'Brendan Eich',\n      'Guido van Rossum',\n      'James Gosling',\n      'Bjarne Stroustrup',\n    ],\n    correct: 1,\n    desc:\n      'Brendan Eich, a Netscape Communications Corporation programmer, created JavaScript in September 1995. ',\n    image: 'https://quizzing.s3.ap-south-1.amazonaws.com/js_dev.jpeg',\n  },\n];\nexport default questions;\n","import React, { useEffect, useState } from 'react';\nimport {Progress, Button} from 'reactstrap';\nimport DisplayQuestions from './DisplayQuestions';\nimport questions from '../questions';\n\nfunction randomShuffle(q)\n{\n  for(let i=q.length-1 ; i>0 ; i--)\n  {\n    let ind=Math.floor(Math.random()*(i+1));\n    let temp=q[i];\n    q[i]=q[ind];\n    q[ind]=temp;\n  }\n  return q;\n}\n\nfunction Timer(props)\n{\nconst {time} = props;\nreturn (\n  <div className='container'>\n    <div className='text-center'>\n      {time===0\n      ?\"Time's up\"\n      :time+\" seconds left\"}\n      </div>\n    <Progress value={100-time} color=\"danger\"/>\n  </div>\n);\n}\n\nfunction Quiz(props) {\n  const [time, setTime] = useState(100); // time remaining;\n  const [active, setActive] = useState(true); // sate of the quiz;\n  const [problems, setProblems] = useState(null);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState([null, null, null, null,null]);\n\n  const finishQuiz = ()=>\n  {\n      setActive(false);\n      let score=0;\n      for(let i=0; i<problems.length; i++)\n      {\n        if(problems[i].correct===selected[i])\n          score+=10;\n      }\n      alert('Congrats! Your score is'+score+\" out of 50\");\n  }\n\n  const setUsersChoice = (index, choice) =>\n  {\n    let t=selected;\n    t[index]=choice;\n    setSelected(t);\n  }\n\n  useEffect(() => {\n    if (time === 0) {\n      finishQuiz();\n    }\n    if(active&&time!==0)\n    {\n    setTimeout(() => {\n      setTime(time - 1);\n    }, 1000);\n    }\n  }, [time]);\n\n  useEffect(()=>{\n    setProblems(randomShuffle(questions).splice(0,5));\n  },[]);\n\n  return (\n    <div className='container text-white'>\n      <div className='row'>\n        <div className='col-12'>\n          <Timer time={time} />\n          <br />\n          <br />\n          <DisplayQuestions\n            index={current}\n            problem={!problems ? null : problems[current]}\n            active={active}\n            userChoice={selected[current]}\n            setUsersChoice={setUsersChoice}\n          />\n          {current !== 0 ? (\n            <>\n              <Button\n                color='info'\n                onClick={() => {\n                  setCurrent(current - 1);\n                }}\n              >\n                Previous\n              </Button>{' '}\n            </>\n          ) : (\n            ''\n          )}\n          {current !== 4 ? (\n            <>\n              <Button\n                color='info'\n                onClick={() => {\n                  setCurrent(current + 1);\n                }}\n              >\n                Next\n              </Button>{' '}\n            </>\n          ) : (\n            ''\n          )}\n          {\n            active?\n            <>\n              <Button\n                color='info'\n                onClick={() => {\n                  finishQuiz();\n                }}\n              >\n                Submit\n              </Button>{' '}\n            </>\n            :\"\"\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { Button } from 'reactstrap';\n\nfunction Home(props)\n{\n\n  return (\n    <div className='container'>\n      <br />\n      <br />\n      <br />\n      <div className='row text-white text-center heading'>\n        A platform that allows you to add various questions in a question bank\n        and play a quiz made up of random questions.\n      </div>\n      <br />\n      <br />\n      <br />\n      <br />\n      <div className='row text-center'>\n        <div className='col-12'>\n          <Link to='/quiz'>\n            <Button color='info'>Play quiz</Button>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Home;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Quiz from './components/Quiz';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Header />\n        <Switch>\n          <Route path='/quiz'>\n            <Quiz />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}